# if cross-compiling from nixos, patch the binary with
# patchelf --set-interpreter /usr/lib64/ld-linux-x86-64.so.2 haemolacriaa

[package]
name = "haemolacriaa"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# either 
console_error_panic_hook = "0.1"
leptos = { version = "0.7" }
leptos_meta = { version = "0.7.0" }
leptos_router = { version = "0.7" }
thiserror = "2"
serde = "1.0.197"
chrono = { version = "0.4.39", features = ["serde"] }
serde_json = { version = "1.0.120", features = ["std"] }
server_fn = { version = "0.7", features = ["multipart"] }
leptos_icons = "0.5.0"
icondata = "0.5.0"
futures = "0.3.31"

# frontend
web-sys = { version = "0.3.70", features = ["Storage"], optional = true }
wasm-bindgen = { version = "0.2", optional = true }
js-sys = { version = "0.3.76", optional = true }

# compile time
const_format = "0.2.32"

# server
http = { version = "1", optional = true }
axum = { version = "0.7", features = [], optional = true }
leptos_axum = { version = "0.7", optional = true }
tokio = { version = "1", features = ["rt-multi-thread", "sync"], optional = true }
tower = { version = "0.5", features = ["util"], optional = true }
tower-http = { version = "0.6", features = ["compression-gzip", "cors", "timeout", "trace"], optional = true }
headers = { version = "0.4.0", optional = true }
sqlx = { version = "0.8.0", features = ["runtime-tokio", "postgres", "tls-rustls", "chrono"], optional = true }
cookie = { path = "../cookie-rs", features = ["chrono"], optional = true }
jsonwebtoken = { version = "9.3.0", optional = true }
tracing-subscriber = { version = "0.3.19", optional = true }
tracing = { version = "0.1.41", optional = true }
image = { version = "0.25.5", optional = true }
rayon = { version = "1.10.0", optional = true }
rand = { version = "0.9.0", optional = true }
base64 = { version = "0.22.1", optional = true }
axum_thiserror_tracing = { version = "0.1.0", features = ["tracing"], optional = true }
fast_image_resize = { version = "5.1.2", features = ["image", "rayon"], optional = true }
parking_lot = { version = "0.12.3", optional = true }
# async-stripe = { version = "0.39.1", default-features = false, features = ["runtime-tokio-hyper"], optional = true }

[build-dependencies]
image = { version = "0.25.5" }
sha256 = { version = "1.5.0" }
webp = { version = "0.3.0" }

[features]
hydrate = [
	"dep:js-sys",
	"dep:web-sys",
	"dep:wasm-bindgen",
	"leptos/hydrate",
]
ssr = [
  "dep:http",
  "dep:axum",
  "dep:image",
  "dep:tokio",
  "dep:tower",
  "dep:tower-http",
  "dep:cookie",
  "dep:headers",
  "dep:leptos_axum",
  "dep:sqlx",
  "dep:jsonwebtoken",
  "dep:tracing",
  "dep:tracing-subscriber",
  "dep:rayon",
# "dep:async-stripe",
  "dep:base64",
  "dep:rand",
  "dep:fast_image_resize",
  "dep:axum_thiserror_tracing",
  "dep:parking_lot",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
]

# server speed optimized
[profile.release]
codegen-units = 1
lto = true

# size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
# test both on release build
# opt-level = 's'
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
output-name = "haemolacriaa"
site-root = "target/site"
site-pkg-dir = "pkg"
tailwind-input-file = "style/tailwind.css"
assets-dir = "assets"
site-addr = "127.0.0.1:3000"
reload-port = 3001
browserquery = "defaults"
env = "PROD"
bin-features = ["ssr"]
bin-default-features = false
lib-features = ["hydrate"]
lib-default-features = false
lib-profile-release = "wasm-release"
